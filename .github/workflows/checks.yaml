name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: true
  schedule:
    - cron: '0 0 * * 0'

env:
  CARGO_TERM_COLOR: always

permissions: read-all

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cargo build --all-features --verbose
  Toml-Fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          cache-targets: false
          cache-all-crates: true
      - run: cargo tools
      - run: taplo fmt --check
  Format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cargo fmt --all --check --verbose
  Clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          cache-targets: false
          cache-all-crates: true
      - run: cargo tools
      - run: cargo clippy --all-features --verbose -- --deny warnings
      - run: cargo clippy --all-features --quiet --message-format=json | cargo-action-fmt
        if: failure()
  Tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          cache-targets: false
          cache-all-crates: true
      - run: cargo tools
      - name: Run tests
        run: cargo llvm-cov nextest --all-features --all-targets --no-fail-fast --verbose
      - name: Prepare coverage report
        if: ${{ !cancelled() }}
        run: cargo llvm-cov report --lcov --output-path coverage.lcov
      - name: Upload coverage reports to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  Deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          cache-targets: false
          cache-all-crates: true
      - run: cargo tools
      - name: Machete
        run: cargo machete
      - name: Deny
        run: cargo deny check all
  Publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          cache-targets: false
          cache-all-crates: true
      - run: cargo tools
      - name: Dry run publish
        run: |
          cargo license --all-features --avoid-dev-deps --json > dependencies-license.json
          cargo publish --all-features --allow-dirty --dry-run --verbose
          cargo package --all-features --list --allow-dirty
